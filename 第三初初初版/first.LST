C51 COMPILER V9.51   FIRST                                                                 08/17/2019 01:15:18 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE FIRST
OBJECT MODULE PLACED IN first.OBJ
COMPILER INVOKED BY: I:\Keil\C51\BIN\C51.EXE first.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <STC15F2K60S2.h>
   2          sbit beep = P3^4;
   3          //sbit  ADDR3 = P1^3;
   4          //sbit  ENLED = P1^4;
   5          //uchar duanxuan[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};     //显示0-9
   6          unsigned char weixuan[]={0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07};       //数码管0-7
   7          
   8          sbit led_sel=P2^3;  
   9          bit flag;              //控制蜂鸣器开关的标志位
  10          
  11          //unsigned char  flag_1,flag_2;
  12          
  13          //数码管与LED灯切换引脚
  14          //void delay_ms(unsigned int n)   
  15          //{
  16            //while(n){
  17            //unsigned char i, j;
  18            //i = 11;
  19            //j = 190;
  20            //do
  21            //{
  22              //while (--j);
  23            //} while (--i);
  24            //n--;
  25          //}
  26          //}
  27          
  28          void Init(){
  29   1        P3M1 = 0x00;
  30   1        P3M0 = 0x10;
  31   1        
  32   1        P0M1 = 0x00;
  33   1        P0M0 = 0xff;
  34   1      
  35   1        P2M1 = 0x00;
  36   1        P2M0 = 0x08;
  37   1        
  38   1        beep = 0;
  39   1        flag = 0;
  40   1        led_sel=0;  //先选择数码管亮
  41   1        
  42   1        //flag_1 = 0;
  43   1        //flag_2 = 0;
  44   1      }
  45          
  46          ///////////////////////////////////////////////////////////////////////////
  47          unsigned char code LedChar[] = {  //数码管显示字符转换表
  48              //0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
  49              //0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E
  50              0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f
  51          };
  52          unsigned char LedBuff[9] = {  //数码管+独立LED显示缓冲区
  53              //0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
  54              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  55          };
C51 COMPILER V9.51   FIRST                                                                 08/17/2019 01:15:18 PAGE 2   

  56          bit flag1s = 1;
  57          unsigned char T0RH = 0;
  58          unsigned char T0RL = 0;
  59          
  60          void ConfigTimer0(unsigned int ms);
  61          void TrafficLight();
  62          void main()
  63          {
  64   1          Init();
  65   1          led_sel = 0;
  66   1          EA = 1;      //开总中断
  67   1          //ENLED = 0;   //使能数码管和LED
  68   1          //ADDR3 = 1;
  69   1          ConfigTimer0(1);  //配置T0定时1ms
  70   1          
  71   1          while (1)
  72   1          {
  73   2              if (flag1s)  //每秒执行一次交通灯刷新
  74   2              {
  75   3                  flag1s = 0;
  76   3                  TrafficLight();
  77   3              }
  78   2          }
  79   1      }
  80          
  81          void ConfigTimer0(unsigned int ms)
  82          {
  83   1          unsigned long tmp;  //临时变量
  84   1          
  85   1          tmp = 11059200 / 12;      //定时器计数频率
  86   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
  87   1          tmp = 65536 - tmp;        //计算定时器重载值
  88   1          tmp = tmp + 18;           //补偿中断响应延时造成的误差
  89   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
  90   1          T0RL = (unsigned char)tmp;
  91   1          TMOD &= 0xF0;   //清零T0的控制位
  92   1          TMOD |= 0x01;   //配置T0为模式1
  93   1          TH0 = T0RH;     //加载T0重载值
  94   1          TL0 = T0RL;
  95   1          ET0 = 1;        //使能T0中断
  96   1          TR0 = 1;        //启动T0
  97   1      }
  98          void TrafficLight()
  99          {
 100   1        static unsigned char color = 2;
 101   1        static unsigned char timer = 0;
 102   1      
 103   1        if(timer == 0)
 104   1        {
 105   2          switch(color)
 106   2          {
 107   3            case 0:
 108   3            
 109   3            
 110   3            color = 1;
 111   3            timer = 10;
 112   3            //LedBuff[8] = 0x03;
 113   3            break;
 114   3      
 115   3            case 1:
 116   3            
 117   3            
C51 COMPILER V9.51   FIRST                                                                 08/17/2019 01:15:18 PAGE 3   

 118   3            color = 2;
 119   3            timer = 30;
 120   3            LedBuff[8] = 0x01;
 121   3            break;
 122   3      
 123   3            case 2:
 124   3            
 125   3            
 126   3            color = 0;
 127   3            timer = 8;//绿灯
 128   3            LedBuff[8] = 0x07;
 129   3            break;
 130   3      
 131   3            default:
 132   3            break;
 133   3          }
 134   2        }
 135   1        else
 136   1        {
 137   2          timer--;
 138   2          
 139   2          if (color == 2){
 140   3              flag=~flag;
 141   3          }else{
 142   3            flag=0;
 143   3          }
 144   2          
 145   2          if (color == 1){
 146   3            
 147   3              if (timer%2==0){
 148   4                  LedBuff[8] = 0x03;
 149   4              }else{
 150   4                  LedBuff[8] = 0x00;
 151   4              }
 152   3            
 153   3          }
 154   2          
 155   2        }
 156   1        //LedBuff[0] = LedChar[timer%10];
 157   1        //LedBuff[1] = LedChar[timer/10]; 
 158   1          LedBuff[0] = LedChar[timer/10];
 159   1          LedBuff[1] = LedChar[timer%10]; 
 160   1      }
 161          void LedScan()
 162          {
 163   1          static unsigned char i = 0;  //动态扫描索引
 164   1          led_sel = 0;
 165   1          P0 = 0xFF;             //关闭所有段选位，显示消隐
 166   1          
 167   1          
 168   1          P2 = (P2 & 0x00) | i;  //位选索引值赋值到P2口低3位
 169   1          
 170   1        
 171   1          P0 = LedBuff[i];       //缓冲区中索引位置的数据送到P0口
 172   1          if (i < 8)             //索引递增循环，遍历整个缓冲区
 173   1              i++;
 174   1          else
 175   1              i = 0;
 176   1      }
 177          
 178          void InterruptTimer0() interrupt 1
 179          {
C51 COMPILER V9.51   FIRST                                                                 08/17/2019 01:15:18 PAGE 4   

 180   1          static unsigned int tmr1s = 0;  //1秒定时器
 181   1          //static unsigned int time1s = 0;
 182   1          //static unsigned int time1s_2 = 0;
 183   1        
 184   1          TH0 = T0RH;  //重新加载重载值
 185   1          TL0 = T0RL;
 186   1          LedScan();   //LED扫描显示
 187   1          tmr1s++;     //1秒定时的处理
 188   1          //time1s++;
 189   1        
 190   1          if (tmr1s >= 1000)
 191   1          {
 192   2              tmr1s = 0;
 193   2              flag1s = 1;  //设置秒定时标志
 194   2          }
 195   1          if(flag)
 196   1          {
 197   2              beep=~beep;          //产生方波使得蜂鸣器发声
 198   2          }
 199   1          else
 200   1          {
 201   2              beep=0;             //停止发声，并将beep端口置于低电平
 202   2          }
 203   1          
 204   1          //if(flag_1==1&&flag_2==0){
 205   1            //if(time1s<=1000){
 206   1                //LedBuff[8] = 0x00;
 207   1                //if(time1s==1000){
 208   1                  //flag_2 = 1;
 209   1                //}
 210   1            //}
 211   1            
 212   1            
 213   1          //}else if(flag_1==1&&flag_2==1){
 214   1            //if(time1s >1000){
 215   1                //LedBuff[8] = 0x03;
 216   1                //if(time1s==2000){
 217   1                    //flag_2 = 0;
 218   1                    //time1s=0;
 219   1                //}
 220   1            //}
 221   1          //}
 222   1          
 223   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    358    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
